# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "feature-changelog"]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          token: ${{ secrets.PRIVATE_ACCESS_TOKEN }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8 and pylint
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          # pylint $(ls -d */)
      # - name: Test with pytest
        # run: |
          # pytest
      - name: Version Closing
        run: |
          if [[ github.event.head_commit.message != 'Inserting the information of the changes in the changelog file' ]] ; then 
            version=$(date +"%Y.%m.%d.%H%M")
            colons=":"
            echo -e "## v$version\n" | tee -a CHANGELOG-AUX.md
            if [ `find unreleased/additions/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then cat unreleased/additions/* >> unreleased/additions/added.txt; fi
            if [ `find unreleased/additions/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then echo -e "### Added\n" | tee -a CHANGELOG-AUX.md; fi
            if [ `find unreleased/additions/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then cat unreleased/additions/added.txt >> CHANGELOG-AUX.md; fi
            if [ `find unreleased/additions/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then rm unreleased/additions/*.txt; fi
            if [ `find unreleased/improvements/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then cat unreleased/improvements/* >> unreleased/improvements/improvements.txt; fi
            if [ `find unreleased/improvements/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then echo -e "\n### Improvements\n" | tee -a CHANGELOG-AUX.md; fi
            if [ `find unreleased/improvements/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then cat unreleased/improvements/improvements.txt >> CHANGELOG-AUX.md; fi
            if [ `find unreleased/improvements/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then rm unreleased/improvements/*.txt; fi
            if [ `find unreleased/corrections/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then cat unreleased/corrections/* >> unreleased/corrections/corrections.txt; fi
            if [ `find unreleased/corrections/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then echo -e "\n### Fixed\n" | tee -a CHANGELOG-AUX.md; fi
            if [ `find unreleased/corrections/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then cat unreleased/corrections/corrections.txt >> CHANGELOG-AUX.md; fi
            if [ `find unreleased/corrections/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then echo -e "\n" | tee -a CHANGELOG-AUX.md; fi
            if [ `find unreleased/corrections/ -type f -name "*.txt" | wc -l` -ge 1 ] ; then rm unreleased/corrections/*.txt; fi
            cat CHANGELOG-AUX.md CHANGELOG.md >> CHANGELOG-FINAL.md
            rm CHANGELOG-AUX.md CHANGELOG.md
            mv CHANGELOG-FINAL.md CHANGELOG.md
          fi
      - name: Commit changing
        run: |
          if [[ github.event.head_commit.message != 'Inserting the information of the changes in the changelog file' ]] ; then 
            git config --global user.name 'Anderson Gomes'
            git config --global user.email 'andersongomes@users.noreply.github.com'
            git commit -am "Inserting the information of the changes in the changelog file"
            git push
          fi            